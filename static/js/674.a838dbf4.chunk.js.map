{"version":3,"file":"static/js/674.a838dbf4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Container/Container.module.css?0e8f","pages/Container/Container.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/apiService.jsx","services/status.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieList_moviesList__oxGXM\",\"moviesItem\":\"MovieList_moviesItem__osSDo\",\"poster\":\"MovieList_poster__UbPpc\",\"movieTitle\":\"MovieList_movieTitle__RhENm\",\"link\":\"MovieList_link__+cn-g\"};","import { Link } from 'react-router-dom';\nimport css from './MovieList.module.css';\nimport noPhoto from '../../images/No_image_available.jpg'\n\nconst MovieList = ({ movies, state }) => {\n    return (\n        <>\n        {<ul className={css.moviesList}>\n              {movies.map(movie => (\n                <li key={movie.id} className={css.moviesItem}>\n                  <Link\n                    to={`movies/${movie.id}`} state={state}\n                    className={css.link}\n                  >\n                    <img \n                      src={\n                        movie.poster_path\n                          ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                          : noPhoto\n                          } \n                      alt={movie.title}\n                      className={css.poster}\n                    />\n                  </Link>\n                  <span className={css.movieTitle}>{movie.title}</span>\n                </li>\n              ))}\n            </ul>}\n        </>\n    )\n}\n\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__7LqQo\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"HomePage_main__OiWfi\",\"title\":\"HomePage_title__UFLA3\"};","import { useState, useEffect } from 'react';\nimport Status from '../../services/status';\nimport apiService from '../../services/apiService';\nimport Loader from '../../components/Loader/Loader';\nimport Error from '../../components/Loader/Loader';\nimport css from './HomePage.module.css';\nimport ResponsivePagination from 'react-responsive-pagination';\nimport '../../services/pagination.css';\nimport Container from 'pages/Container/Container';\nimport MovieList from 'components/MovieList/MovieList';\n\n\nexport default function HomePage() {\n\n  const [movies, setMovies] = useState(null);\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\nuseEffect(() => {\n    setStatus(Status.PENDING);\n    apiService\n    .getTrendingMovies(currentPage)\n    .then(({ results, total_pages}) => {\n        setMovies(results);\n        setTotalPages(total_pages);\n        setStatus(Status.RESOLVED);\n    })\n    .catch(error => {\n        console.log(error);\n        setError('Something went wrong. Please try again later.');\n        setStatus(Status.REJECTED);\n    })\n}, [currentPage])\n\n\nfunction handlePageChange(page) {\n    setCurrentPage(page);\n  };\n\nreturn (\n  <Container>\n    <main className={css.main}>\n      <h1 className={css.title}>Trending today</h1>\n        {status === Status.PENDING && <Loader />}\n        {status === Status.REJECTED && <Error message={error.message} />}\n        {status === Status.RESOLVED && (\n          <div>\n            <MovieList movies={movies}/>\n              {totalPages > 1 && (\n                <ResponsivePagination\n                  total={totalPages}\n                  onPageChange={(page) => handlePageChange(page)}\n                  current={currentPage}\n                  previousLabel=\"Previous\" \n                  nextLabel=\"Next\"\n                />\n              )}\n           </div>\n          )}\n    </main>\n  </Container>\n)\n}","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '64838f78e32b0fdbe94ce78a1f5060cb';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n}\n\nasync function getTrendingMovies(page) {\n    try {\n        const config = {\n            url: `trending/movie/day`,\n            params: {\n                page,\n            },\n        }\n        const { data } = await axios(config, page);\n        return data;\n    }\n    catch (error) {\n        console.log('error', { error });\n        return null;\n    }\n}\n\nasync function getMoviesByKeyWord(query, page) {\n    try {\n        const config = {\n            url: `search/movie`,\n            params: {\n                query,\n                page,\n            },\n        }\n        const { data } = await axios(config, query, page);\n        return data;\n    }\n    catch (error) {\n        console.log('error', {error});\n        return null;\n    }\n}\n\nasync function getMovieById(id) {\n    try {\n        const config = {\n            url: `movie/${id}`,\n        }\n        const { data } = await axios(config, id);\n        return data;\n    }\n    catch (error) {\n        console.log('error', { error });\n        return null;\n    }\n}\n\nasync function getCastInfo(id) {\n    try {\n       const config = {\n        url: `movie/${id}/credits`,\n       }\n       const { data } = await axios(config, id);\n       return data.cast;\n     }\n     catch (error) {\n        console.log('error', { error });\n        return null;\n     }\n}\n\nasync function getMovieReview(id) {\n    try {\n        const config = {\n            url: `movie/${id}/reviews`,\n        }\n        const { data } = await axios(config, id);\n        return data.results;\n    }\n    catch (error) {\n        console.log('error', { error });\n        return null;\n    }\n}\n\nconst apiService = {\n    getTrendingMovies,\n    getMoviesByKeyWord,\n    getMovieById,\n    getCastInfo,\n    getMovieReview,\n}\n\nexport default apiService;","const Status = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    RESOLVED: 'resolved',\n    REJECTED: 'rejected',\n}\n\nexport default Status;"],"names":["movies","state","className","css","map","movie","to","id","src","poster_path","noPhoto","alt","title","Container","children","styles","HomePage","useState","setMovies","totalPages","setTotalPages","currentPage","setCurrentPage","error","setError","Status","status","setStatus","useEffect","apiService","then","results","total_pages","catch","console","log","Loader","message","MovieList","total","onPageChange","page","handlePageChange","current","previousLabel","nextLabel","getTrendingMovies","config","url","params","axios","data","getMoviesByKeyWord","query","getMovieById","getCastInfo","cast","getMovieReview","api_key","language","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}